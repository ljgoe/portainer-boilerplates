#+title: Radarr
#+property: header-args :tangle docker-compose.yml

Radarr is a movie collection manager for Usenet and BitTorrent users. - <https://github.com/Radarr/Radarr>

** Docker-compose.yml
*** Docker Image

- Docker Service Name = lscr.io/linuxserver/radarr:latest
- Image: Specify the docker image. No version behind colon so always latest version.
- Container_name: Name that will be given to the container. If not stated, this will be randomized.

#+begin_src yaml
version: '2.1'

services:
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
#+end_src

*** General

- Restart: The container will always try to restart unless it is manually stopped by the user.

#+begin_src yaml
    restart: unless-stopped
#+end_src

*** Network

- Ports: This is the port used by Radarr. Left is the host port, right is the container port.

#+begin_src yaml
    ports:
      - 7878:7878
#+end_src

*** Variables

- Volumes: Storage volumes need to be passed trough or keep locally. Left volume is a local directory or file. Right volume is a direcotry or file inside the container.
  - The downloads host path needs to be the same as the download client
- Environment: Add timezone, give same id as your user id ~$ id <username>~

#+begin_src yaml
    volumes:
      - </path/to/host/config>:/config
      - </path/to/host/movies>:/movies
      - </path/to/host/Downloads>:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
#+end_src

** Notes
- The movies directory will need to be created by you (it should be owned by the same id)
- In the WebUI under settings:
  - Media Management:
    - Rename movies
    - Replace Illegal characters
    - Colon replacement Delete
    - Format {movie title} ({release year})
  - Indexers will get handled by prowlarr (boilerplate)
  - Download client:
    - qBittorrent (boilerplate)
      - enable
      - host: <ip address> (preferablly not localhost or 127.0.0.1)
      - port: 8080
      - Enter login and password
  - General:
    - Here you can find the api key that will be needed if you want to use something like prowlarr or jackett
